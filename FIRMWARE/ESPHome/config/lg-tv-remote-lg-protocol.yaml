esphome:
  name: lg-tv-remote-lg
  friendly_name: 'LG TV Remote'

substitutions:
  device_name: 'LG TV Remote'

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: latest

# Enable logging
logger:
  level: INFO

api:
  reboot_timeout: 0s

ota:
  - platform: esphome

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password

  ap:
    ssid: '${device_name} AP'
    password: '12345678'

captive_portal:

web_server:
  port: 80
  version: 3

# ---------- IR Transmitter ----------
remote_transmitter:
  id: ir_remote
  pin: GPIO4
  carrier_duty_percent: 50%

text_sensor:
  - platform: wifi_info
    ip_address:
      name: '${device_name} IP Address'

# ---------- System Control Buttons ----------
button:
  - platform: safe_mode
    id: button_safe_mode
    name: '${device_name} Safe Mode'

  - platform: factory_reset
    id: factory_reset_btn
    name: '${device_name} Factory Reset'

  - platform: restart
    id: restart_btn
    name: '${device_name} Reboot'

  # ---------- Basic TV Controls ----------
  - platform: template
    id: power_button
    name: "Power ON/OFF"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF10EF
            nbits: 32
            # repeat: 2
              # times: 3
              # wait_time: 200us
  - platform: template
    id: mute_button
    name: "Mute"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF906F
            nbits: 32
            repeat: 2

  - platform: template
    id: input_button
    name: "Input"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFD02F
            nbits: 32
            repeat: 2

  - platform: template
    id: tv_button
    name: "TV"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF0FF0
            nbits: 32
            repeat: 2

  - platform: template
    id: back_button
    name: "Back"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF14EB
            nbits: 32
            repeat: 2

  - platform: template
    id: ok_button
    name: "OK"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF22DD
            nbits: 32
            repeat: 2

  - platform: template
    id: exit_button
    name: "Exit"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFDA25
            nbits: 32
            repeat: 2

  - platform: template
    id: settings_button
    name: "Settings"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFC23D
            nbits: 32
            repeat: 2

  - platform: template
    id: info_button
    name: "Info"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF55AA
            nbits: 32
            repeat: 2

  - platform: template
    id: guide_button
    name: "Guide"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFD52A
            nbits: 32
            repeat: 2

  - platform: template
    id: list_button
    name: "List"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFCA35
            nbits: 32
            repeat: 2

  - platform: template
    id: qmenu_button
    name: "Quick Menu"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFA25D
            nbits: 32
            repeat: 2

  # ---------- Navigation Controls ----------
  - platform: template
    id: up_button
    name: "Up"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF02FD
            nbits: 32
            repeat: 2

  - platform: template
    id: down_button
    name: "Down"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF827D
            nbits: 32
            repeat: 2

  - platform: template
    id: left_button
    name: "Left"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFE01F
            nbits: 32
            repeat: 2

  - platform: template
    id: right_button
    name: "Right"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF609F
            nbits: 32
            repeat: 2

  # ---------- Volume Controls ----------
  - platform: template
    id: vol_up_button
    name: "Volume Up"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF40BF
            nbits: 32
            repeat: 2

  - platform: template
    id: vol_down_button
    name: "Volume Down"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFC03F
            nbits: 32
            repeat: 2

  # ---------- Channel Controls ----------
  - platform: template
    id: ch_up_button
    name: "Channel Up (P+)"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF00FF
            nbits: 32
            repeat: 2

  - platform: template
    id: ch_down_button
    name: "Channel Down (P-)"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF807F
            nbits: 32
            repeat: 2

  # ---------- Number Buttons ----------
  - platform: template
    id: num_0_button
    name: "0"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF08F7
            nbits: 32
            repeat: 2

  - platform: template
    id: num_1_button
    name: "1"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF8877
            nbits: 32
            repeat: 2

  - platform: template
    id: num_2_button
    name: "2"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF48B7
            nbits: 32
            repeat: 2

  - platform: template
    id: num_3_button
    name: "3"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFC837
            nbits: 32
            repeat: 2

  - platform: template
    id: num_4_button
    name: "4"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF28D7
            nbits: 32
            repeat: 2

  - platform: template
    id: num_5_button
    name: "5"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFA857
            nbits: 32
            repeat: 2

  - platform: template
    id: num_6_button
    name: "6"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF6897
            nbits: 32
            repeat: 2

  - platform: template
    id: num_7_button
    name: "7"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFE817
            nbits: 32
            repeat: 2

  - platform: template
    id: num_8_button
    name: "8"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF18E7
            nbits: 32
            repeat: 2

  - platform: template
    id: num_9_button
    name: "9"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF9867
            nbits: 32
            repeat: 2

  # ---------- HDMI Inputs ----------
  - platform: template
    id: hdmi1_button
    name: "HDMI 1"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF738C
            nbits: 32
            repeat: 2

  - platform: template
    id: hdmi2_button
    name: "HDMI 2"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF33CC
            nbits: 32
            repeat: 2

  - platform: template
    id: hdmi3_button
    name: "HDMI 3"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF9768
            nbits: 32
            repeat: 2

  # ---------- Color Buttons ----------
  - platform: template
    id: red_button
    name: "Red"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF4EB1
            nbits: 32
            repeat: 2

  - platform: template
    id: green_button
    name: "Green"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF8E71
            nbits: 32
            repeat: 2

  - platform: template
    id: yellow_button
    name: "Yellow"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFC639
            nbits: 32
            repeat: 2

  - platform: template
    id: blue_button
    name: "Blue"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF8679
            nbits: 32
            repeat: 2

  # ---------- Media Controls ----------
  - platform: template
    id: play_button
    name: "Play"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF0DF2
            nbits: 32
            repeat: 2

  - platform: template
    id: pause_button
    name: "Pause"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF5DA2
            nbits: 32
            repeat: 2

  - platform: template
    id: stop_button
    name: "Stop"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF8D72
            nbits: 32
            repeat: 2

  - platform: template
    id: forward_button
    name: "Forward"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF718E
            nbits: 32
            repeat: 2

  - platform: template
    id: backward_button
    name: "Backward"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFF10E
            nbits: 32
            repeat: 2

  # ---------- Special Functions ----------
  - platform: template
    id: live_tv_button
    name: "Live TV"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF3EC1
            nbits: 32
            repeat: 2

  - platform: template
    id: ratio_button
    name: "Ratio"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF9E61
            nbits: 32
            repeat: 2

  - platform: template
    id: energy_button
    name: "Energy"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFA956
            nbits: 32
            repeat: 2

  - platform: template
    id: fav_button
    name: "Favorites"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF7887
            nbits: 32
            repeat: 2

  - platform: template
    id: qview_button
    name: "Quick View"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF58A7
            nbits: 32
            repeat: 2

  - platform: template
    id: subtitle_button
    name: "Subtitle"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF9C63
            nbits: 32
            repeat: 2

  # ---------- Volume Preset Buttons ----------
  - platform: template
    id: vol_50_button
    name: "Volume to 50"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF619E
            nbits: 32
            repeat: 2

  - platform: template
    id: vol_80_button
    name: "Volume to 80"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DF21DE
            nbits: 32
            repeat: 2

  - platform: template
    id: vol_100_button
    name: "Volume to 100"
    on_press:
      then:
        - remote_transmitter.transmit_lg:
            data: 0x20DFE11E
            nbits: 32
            repeat: 2

  # ---------- Send Custom LG Code Button ----------
  - platform: template
    id: send_custom_button
    name: "Send Custom LG Code"
    on_press:
      then:
        - if:
            condition:
              lambda: 'return id(custom_code_input).state.size() > 0;'
            then:
              - lambda: |-
                  std::string code_str = id(custom_code_input).state;
                  if (code_str.substr(0, 2) == "0x" || code_str.substr(0, 2) == "0X") {
                    code_str = code_str.substr(2);
                  }
                  uint32_t code = strtoul(code_str.c_str(), NULL, 16);
                  auto call = id(ir_remote).transmit();

                  esphome::remote_base::LGData data = { code };
                  esphome::remote_base::LGProtocol().encode(call.get_data(), data);

                  call.set_send_times(3);
                  call.perform();
            else:
              - logger.log: "Custom LG code is empty"

# ---------- Custom Code Input ----------
text:
  - platform: template
    id: custom_code_input
    name: "Custom LG Code (hex)"
    min_length: 0
    max_length: 20
    mode: text
    restore_value: false
    optimistic: true

# ---------- Quick Action Selector ----------
select:
  - platform: template
    id: quick_action
    name: "Quick Actions"
    options: 
      - "Power ON/OFF"
      - "Switch to HDMI 1"
      - "Switch to HDMI 2" 
      - "Switch to HDMI 3"
      - "Volume Mute"
      - "Live TV"
      - "Settings"
      - "Volume to 50"
    initial_option: "Volume Mute"
    optimistic: true
    restore_value: false
    on_value:
      then:
        - if:
            condition:
              lambda: 'return x == "Power ON/OFF";'
            then:
              - button.press: power_button
        - if:
            condition:
              lambda: 'return x == "Switch to HDMI 1";'
            then:
              - button.press: hdmi1_button
        - if:
            condition:
              lambda: 'return x == "Switch to HDMI 2";'
            then:
              - button.press: hdmi2_button
        - if:
            condition:
              lambda: 'return x == "Switch to HDMI 3";'
            then:
              - button.press: hdmi3_button
        - if:
            condition:
              lambda: 'return x == "Volume Mute";'
            then:
              - button.press: mute_button
        - if:
            condition:
              lambda: 'return x == "Live TV";'
            then:
              - button.press: live_tv_button
        - if:
            condition:
              lambda: 'return x == "Settings";'
            then:
              - button.press: settings_button
        - if:
            condition:
              lambda: 'return x == "Volume to 50";'
            then:
              - button.press: vol_50_button

sensor:
  - platform: uptime
    id: uptime_sens
    name: '${device_name} Uptime'

  - platform: internal_temperature
    id: mcu_temp
    name: '${device_name} MCU Temperature'
